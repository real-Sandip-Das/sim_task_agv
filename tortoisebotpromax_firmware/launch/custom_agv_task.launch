<?xml version="1.0" ?>

<launch>

<!-- <include file="$(find tortoisebotpromax_gazebo)/launch/tortoisebotpromax_playground.launch" /> -->

    <!-- rosparam set /use_sim_time true -->
    <param name="/use_sim_time" value="true" />

	<!-- Start Google Cartographer node with custom configuration file-->
	<node name="cartographer_node" pkg="cartographer_ros" type="cartographer_node" args=" 
		-configuration_directory $(find tortoisebotpromax_firmware)/config 
		-configuration_basename lidar.lua" 
	      output="screen">
	</node>

	<!-- Map Publishing Node -->
    <node name="cartographer_occupancy_grid_node" pkg="cartographer_ros" type="cartographer_occupancy_grid_node" args="-resolution 0.01" />
	
	<!-- Publish Odometry on /odom topic (required for Localization) -->
	<node name="odom_publisher" pkg="tortoisebotpromax_firmware" type="odom_pub.py" output="screen"/> 

    <node pkg="image_proc" type="image_proc" name="image_proc" ns="/camera/color" />

    <!-- Run the nodelet manager -->
    <node pkg="nodelet" type="nodelet" name="aruco_tracker_nodelet_manager" args="manager" output="screen"/>

    <!-- Load the ArucoTracker nodelet -->
    <node pkg="nodelet" type="nodelet" name="aruco_tracker" args="load aruco_opencv/ArucoTracker aruco_tracker_nodelet_manager" output="screen">
        <param name="cam_base_topic" value="/camera/color/image_rect"/>
        <param name="marker_size" value="0.4"/>
        <param name="image_is_rectified" value="true"/>
    </node>

    <!-- Convert pose estimations of ArUco markers to Landmarks for Google Cartographer -->
    <include file="$(find aruco_opencv_to_cartographer_landmark)/launch/demo.launch"/>

    <!-- Rviz -->
    <node name="rviz" pkg="rviz" type="rviz" args="--display-config $(find tortoisebotpromax_firmware)/rviz/config.rviz" />

 
</launch>
